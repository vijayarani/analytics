<?php//include("../includes/dbconfig.php");include 'header.inc.php';/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * Easy set variables *//* Array of database columns which should be read and sent back to DataTables. Use a space where * you want to insert a non-database field (for example a counter or static image) */function html_escaped_output($output_value) {    $escaped_output = htmlspecialchars($output_value, ENT_QUOTES, "UTF-8");    return $escaped_output;}$aColumns = array('vi.datetime', 'vi.country', 'vi.city', 'vi.ip_address', 'p.page_name', 'vi.page_referer');/* Indexed column (used for fast and accurate table cardinality) */$sIndexColumn = "vi.id";/* * Paging */$sLimit = "";if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {    $sLimit = "LIMIT " . intval($_GET['iDisplayStart']) . ", " .            intval($_GET['iDisplayLength']);}/* * Ordering */$sOrder = "";if (isset($_GET['iSortCol_0'])) {    $sOrder = "ORDER BY  ";    for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {        if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {            if (!isset($aColumns[intval($_GET['iSortCol_' . $i])]))                continue;            if (strtolower($_GET['sSortDir_' . $i]) != "desc" && strtolower($_GET['sSortDir_' . $i]) != "asc")                return;            $sOrder .= $aColumns[intval($_GET['iSortCol_' . $i])] . " " . $_GET['sSortDir_' . $i] . ", ";        }    }    $sOrder = substr_replace($sOrder, "", -2);    if ($sOrder == "ORDER BY") {        $sOrder = "";    }}/* * Filtering * NOTE this does not match the built-in DataTables filtering which does it * word by word on any field. It's possible to do here, but concerned about efficiency * on very large tables, and MySQL's regex functionality is very limited */$sWhere = "";$params = array();if (isset($_GET['sSearch']) && $_GET['sSearch'] != "") {    $sWhere = "WHERE (";    for ($i = 0; $i < count($aColumns); $i++) {        $sWhere .= "" . $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";    }    $sWhere = substr_replace($sWhere, "", -3);    $sWhere .= ')';}/* Individual column filtering */for ($i = 0; $i < count($aColumns); $i++) {    if (isset($_GET['bSearchable_' . $i]) && $_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {        if ($sWhere == "") {            $sWhere = "WHERE ";        } else {            $sWhere .= " AND ";        }        $sWhere .= "" . $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%' ";    }}$sWhere = (@$sWhere != "") ? $sWhere . " AND vi.geo_info_status = 1" : "WHERE vi.geo_info_status = 1";/* * SQL queries * Get data to display */$sQuery = "SELECT SQL_CALC_FOUND_ROWS " . str_replace(" , ", " ", implode(", ", $aColumns)) . " 				FROM visitors_info as vi LEFT JOIN page as p ON p.id = vi.page_id $sWhere $sOrder $sLimit";try {    $stmt = $dbcon->prepare($sQuery, array(PDO::ATTR_CURSOR => PDO::CURSOR_SCROLL));    $stmt->execute($params);    $rResult = $stmt->fetchALL(PDO::FETCH_ASSOC);} catch (PDOException $e) {    print $e->getMessage();}/* Data set length after filtering */$sQuery = "SELECT FOUND_ROWS()";try {    $stmt = $dbcon->prepare($sQuery, array(PDO::ATTR_CURSOR => PDO::CURSOR_SCROLL));    $stmt->execute();    $iFilteredTotal1 = $stmt->fetch();    $iFilteredTotal = $iFilteredTotal1[0];} catch (PDOException $e) {    print $e->getMessage();}/* Total data set length */$sQuery = "SELECT COUNT(" . $sIndexColumn . ") FROM visitors_info as vi WHERE vi.geo_info_status = 1";try {    $stmt = $dbcon->prepare($sQuery, array(PDO::ATTR_CURSOR => PDO::CURSOR_SCROLL));    $stmt->execute();    $iTotal1 = $stmt->fetch();    $iTotal = $iTotal1[0];} catch (PDOException $e) {    print $e->getMessage();}/* * Output */$output = array(    "sEcho" => intval($_GET['sEcho']),    "iTotalRecords" => $iTotal,    "iTotalDisplayRecords" => $iFilteredTotal,    "aaData" => array());foreach ($rResult as $aRow) {//    $coockie = $_GET['timezone'];    $tz = str_replace('-', '', $coockie);    if ($tz == $coockie) {        $time = date("d-m-Y H:i:s", strtotime($aRow['datetime']) + ((int) $tz) * 60 * 60);        //echo $time;    } else {        //echo $time;        $time = date("d-m-Y H:i:s", strtotime($aRow['datetime']) - ((int) $tz) * 60 * 60);    }    $aRow[0] = html_escaped_output(date("d-m-Y", strtotime($time)));    $aRow[1] = html_escaped_output(date("H:i:s", strtotime($time)));    // $aRow[0] = html_escaped_output(date("d-m-Y", strtotime($aRow['datetime'])));    //$aRow[1] = html_escaped_output(date("H:i:s", strtotime($aRow['datetime'])));    $aRow[2] = html_escaped_output($aRow['country']);    $aRow[3] = html_escaped_output($aRow['city']);    $aRow[4] = html_escaped_output($aRow['ip_address']);    $aRow[5] = html_escaped_output($aRow['page_name']);    if ($aRow['page_referer'] == "") {        $aRow[6] = 'No Referrer/Direct Site Visitor';    } elseif ($aRow['page_referer'] != "") {        $aRow[6] = '<a href="' . html_escaped_output($aRow['page_referer']) . '" target="' . html_escaped_output('_blank') . '">' . html_escaped_output($aRow['page_referer']) . '</a>';    }    foreach ($aRow as $key => $row_field)        if (!is_numeric($key) || $key > 10)            unset($aRow[$key]);    $output['aaData'][] = $aRow;}echo json_encode($output);?>